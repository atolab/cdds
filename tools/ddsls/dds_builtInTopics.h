/****************************************************************

  Generated by Vortex DDS IDL to C Translator
  File name: dds_builtInTopics.h
  Source: dds_builtInTopics.idl
  Generated: Thu Aug 24 11:56:46 EDT 2017
  Vortex DDS: V0.1.0

*****************************************************************/

#include "dds.h"

#ifndef _DDSL_DDS_BUILTINTOPICS_H_
#define _DDSL_DDS_BUILTINTOPICS_H_


#ifdef __cplusplus
extern "C" {
#endif

typedef struct DDS_octSeq
{
  uint32_t _maximum;
  uint32_t _length;
  uint8_t (*_buffer);
  bool _release;
} DDS_octSeq;

#define DDS_octSeq__alloc() \
((DDS_octSeq*) dds_alloc (sizeof (DDS_octSeq)));

#define DDS_octSeq_allocbuf(l) \
((uint8_t (*)) dds_alloc ((l) * sizeof (uint8_t)))

typedef int32_t DDS_BuiltinTopicKey_t [3];

#define DDS_BuiltinTopicKey_t__alloc() \
((DDS_BuiltinTopicKey_t*) dds_alloc (sizeof (DDS_BuiltinTopicKey_t)));
typedef struct DDS_StringSeq
{
  uint32_t _maximum;
  uint32_t _length;
  char * (*_buffer);
  bool _release;
} DDS_StringSeq;

#define DDS_StringSeq__alloc() \
((DDS_StringSeq*) dds_alloc (sizeof (DDS_StringSeq)));

#define DDS_StringSeq_allocbuf(l) \
((char * (*)) dds_alloc ((l) * sizeof (char *)))

typedef int16_t DDS_DataRepresentationId_t ;

#define DDS_DataRepresentationId_t__alloc() \
((DDS_DataRepresentationId_t*) dds_alloc (sizeof (DDS_DataRepresentationId_t)));
#define DDS_XCDR_REPRESENTATION 0
#define DDS_XML_REPRESENTATION 1
#define DDS_OSPL_REPRESENTATION 1024
#define DDS_GPB_REPRESENTATION 1025
#define DDS_INVALID_REPRESENTATION 32767


typedef struct DDS_Duration_t
{
  int32_t sec;
  uint32_t nanosec;
} DDS_Duration_t;



typedef struct DDS_UserDataQosPolicy
{
  DDS_octSeq value;
} DDS_UserDataQosPolicy;



typedef struct DDS_TopicDataQosPolicy
{
  DDS_octSeq value;
} DDS_TopicDataQosPolicy;



typedef struct DDS_GroupDataQosPolicy
{
  DDS_octSeq value;
} DDS_GroupDataQosPolicy;



typedef struct DDS_TransportPriorityQosPolicy
{
  int32_t value;
} DDS_TransportPriorityQosPolicy;



typedef struct DDS_LifespanQosPolicy
{
  DDS_Duration_t duration;
} DDS_LifespanQosPolicy;


typedef enum DDS_DurabilityQosPolicyKind
{
  DDS_VOLATILE_DURABILITY_QOS,
  DDS_TRANSIENT_LOCAL_DURABILITY_QOS,
  DDS_TRANSIENT_DURABILITY_QOS,
  DDS_PERSISTENT_DURABILITY_QOS
} DDS_DurabilityQosPolicyKind;

#define DDS_DurabilityQosPolicyKind__alloc() \
((DDS_DurabilityQosPolicyKind*) dds_alloc (sizeof (DDS_DurabilityQosPolicyKind)));


typedef struct DDS_DurabilityQosPolicy
{
  DDS_DurabilityQosPolicyKind kind;
} DDS_DurabilityQosPolicy;


typedef enum DDS_PresentationQosPolicyAccessScopeKind
{
  DDS_INSTANCE_PRESENTATION_QOS,
  DDS_TOPIC_PRESENTATION_QOS,
  DDS_GROUP_PRESENTATION_QOS
} DDS_PresentationQosPolicyAccessScopeKind;

#define DDS_PresentationQosPolicyAccessScopeKind__alloc() \
((DDS_PresentationQosPolicyAccessScopeKind*) dds_alloc (sizeof (DDS_PresentationQosPolicyAccessScopeKind)));


typedef struct DDS_PresentationQosPolicy
{
  DDS_PresentationQosPolicyAccessScopeKind access_scope;
  bool coherent_access;
  bool ordered_access;
} DDS_PresentationQosPolicy;



typedef struct DDS_DeadlineQosPolicy
{
  DDS_Duration_t period;
} DDS_DeadlineQosPolicy;



typedef struct DDS_LatencyBudgetQosPolicy
{
  DDS_Duration_t duration;
} DDS_LatencyBudgetQosPolicy;


typedef enum DDS_OwnershipQosPolicyKind
{
  DDS_SHARED_OWNERSHIP_QOS,
  DDS_EXCLUSIVE_OWNERSHIP_QOS
} DDS_OwnershipQosPolicyKind;

#define DDS_OwnershipQosPolicyKind__alloc() \
((DDS_OwnershipQosPolicyKind*) dds_alloc (sizeof (DDS_OwnershipQosPolicyKind)));


typedef struct DDS_OwnershipQosPolicy
{
  DDS_OwnershipQosPolicyKind kind;
} DDS_OwnershipQosPolicy;



typedef struct DDS_OwnershipStrengthQosPolicy
{
  int32_t value;
} DDS_OwnershipStrengthQosPolicy;


typedef enum DDS_LivelinessQosPolicyKind
{
  DDS_AUTOMATIC_LIVELINESS_QOS,
  DDS_MANUAL_BY_PARTICIPANT_LIVELINESS_QOS,
  DDS_MANUAL_BY_TOPIC_LIVELINESS_QOS
} DDS_LivelinessQosPolicyKind;

#define DDS_LivelinessQosPolicyKind__alloc() \
((DDS_LivelinessQosPolicyKind*) dds_alloc (sizeof (DDS_LivelinessQosPolicyKind)));


typedef struct DDS_LivelinessQosPolicy
{
  DDS_LivelinessQosPolicyKind kind;
  DDS_Duration_t lease_duration;
} DDS_LivelinessQosPolicy;



typedef struct DDS_TimeBasedFilterQosPolicy
{
  DDS_Duration_t minimum_separation;
} DDS_TimeBasedFilterQosPolicy;



typedef struct DDS_PartitionQosPolicy
{
  DDS_StringSeq name;
} DDS_PartitionQosPolicy;


typedef enum DDS_ReliabilityQosPolicyKind
{
  DDS_BEST_EFFORT_RELIABILITY_QOS,
  DDS_RELIABLE_RELIABILITY_QOS
} DDS_ReliabilityQosPolicyKind;

#define DDS_ReliabilityQosPolicyKind__alloc() \
((DDS_ReliabilityQosPolicyKind*) dds_alloc (sizeof (DDS_ReliabilityQosPolicyKind)));


typedef struct DDS_ReliabilityQosPolicy
{
  DDS_ReliabilityQosPolicyKind kind;
  DDS_Duration_t max_blocking_time;
  bool synchronous;
} DDS_ReliabilityQosPolicy;


typedef enum DDS_DestinationOrderQosPolicyKind
{
  DDS_BY_RECEPTION_TIMESTAMP_DESTINATIONORDER_QOS,
  DDS_BY_SOURCE_TIMESTAMP_DESTINATIONORDER_QOS
} DDS_DestinationOrderQosPolicyKind;

#define DDS_DestinationOrderQosPolicyKind__alloc() \
((DDS_DestinationOrderQosPolicyKind*) dds_alloc (sizeof (DDS_DestinationOrderQosPolicyKind)));


typedef struct DDS_DestinationOrderQosPolicy
{
  DDS_DestinationOrderQosPolicyKind kind;
} DDS_DestinationOrderQosPolicy;


typedef enum DDS_HistoryQosPolicyKind
{
  DDS_KEEP_LAST_HISTORY_QOS,
  DDS_KEEP_ALL_HISTORY_QOS
} DDS_HistoryQosPolicyKind;

#define DDS_HistoryQosPolicyKind__alloc() \
((DDS_HistoryQosPolicyKind*) dds_alloc (sizeof (DDS_HistoryQosPolicyKind)));


typedef struct DDS_HistoryQosPolicy
{
  DDS_HistoryQosPolicyKind kind;
  int32_t depth;
} DDS_HistoryQosPolicy;



typedef struct DDS_ResourceLimitsQosPolicy
{
  int32_t max_samples;
  int32_t max_instances;
  int32_t max_samples_per_instance;
} DDS_ResourceLimitsQosPolicy;



typedef struct DDS_DurabilityServiceQosPolicy
{
  DDS_Duration_t service_cleanup_delay;
  DDS_HistoryQosPolicyKind history_kind;
  int32_t history_depth;
  int32_t max_samples;
  int32_t max_instances;
  int32_t max_samples_per_instance;
} DDS_DurabilityServiceQosPolicy;



typedef struct DDS_ProductDataQosPolicy
{
  char * value;
} DDS_ProductDataQosPolicy;



typedef struct DDS_EntityFactoryQosPolicy
{
  bool autoenable_created_entities;
} DDS_EntityFactoryQosPolicy;



typedef struct DDS_ShareQosPolicy
{
  char * name;
  bool enable;
} DDS_ShareQosPolicy;



typedef struct DDS_WriterDataLifecycleQosPolicy
{
  bool autodispose_unregistered_instances;
  DDS_Duration_t autopurge_suspended_samples_delay;
  DDS_Duration_t autounregister_instance_delay;
} DDS_WriterDataLifecycleQosPolicy;


typedef enum DDS_InvalidSampleVisibilityQosPolicyKind
{
  DDS_NO_INVALID_SAMPLES,
  DDS_MINIMUM_INVALID_SAMPLES,
  DDS_ALL_INVALID_SAMPLES
} DDS_InvalidSampleVisibilityQosPolicyKind;

#define DDS_InvalidSampleVisibilityQosPolicyKind__alloc() \
((DDS_InvalidSampleVisibilityQosPolicyKind*) dds_alloc (sizeof (DDS_InvalidSampleVisibilityQosPolicyKind)));


typedef struct DDS_InvalidSampleVisibilityQosPolicy
{
  DDS_InvalidSampleVisibilityQosPolicyKind kind;
} DDS_InvalidSampleVisibilityQosPolicy;



typedef struct DDS_SubscriptionKeyQosPolicy
{
  bool use_key_list;
  DDS_StringSeq key_list;
} DDS_SubscriptionKeyQosPolicy;



typedef struct DDS_ReaderDataLifecycleQosPolicy
{
  DDS_Duration_t autopurge_nowriter_samples_delay;
  DDS_Duration_t autopurge_disposed_samples_delay;
  bool autopurge_dispose_all;
  bool enable_invalid_samples;
  DDS_InvalidSampleVisibilityQosPolicy invalid_sample_visibility;
} DDS_ReaderDataLifecycleQosPolicy;



typedef struct DDS_UserKeyQosPolicy
{
  bool enable;
  char * expression;
} DDS_UserKeyQosPolicy;



typedef struct DDS_ReaderLifespanQosPolicy
{
  bool use_lifespan;
  DDS_Duration_t duration;
} DDS_ReaderLifespanQosPolicy;



typedef struct DDS_TypeHash
{
  uint64_t msb;
  uint64_t lsb;
} DDS_TypeHash;



typedef struct DDS_ParticipantBuiltinTopicData
{
  DDS_BuiltinTopicKey_t key;
  DDS_UserDataQosPolicy user_data;
} DDS_ParticipantBuiltinTopicData;

extern const dds_topic_descriptor_t DDS_ParticipantBuiltinTopicData_desc;

#define DDS_ParticipantBuiltinTopicData__alloc() \
((DDS_ParticipantBuiltinTopicData*) dds_alloc (sizeof (DDS_ParticipantBuiltinTopicData)));

#define DDS_ParticipantBuiltinTopicData_free(d,o) \
dds_sample_free ((d), &DDS_ParticipantBuiltinTopicData_desc, (o))


typedef struct DDS_TopicBuiltinTopicData
{
  DDS_BuiltinTopicKey_t key;
  char * name;
  char * type_name;
  DDS_DurabilityQosPolicy durability;
  DDS_DurabilityServiceQosPolicy durability_service;
  DDS_DeadlineQosPolicy deadline;
  DDS_LatencyBudgetQosPolicy latency_budget;
  DDS_LivelinessQosPolicy liveliness;
  DDS_ReliabilityQosPolicy reliability;
  DDS_TransportPriorityQosPolicy transport_priority;
  DDS_LifespanQosPolicy lifespan;
  DDS_DestinationOrderQosPolicy destination_order;
  DDS_HistoryQosPolicy history;
  DDS_ResourceLimitsQosPolicy resource_limits;
  DDS_OwnershipQosPolicy ownership;
  DDS_TopicDataQosPolicy topic_data;
} DDS_TopicBuiltinTopicData;

extern const dds_topic_descriptor_t DDS_TopicBuiltinTopicData_desc;

#define DDS_TopicBuiltinTopicData__alloc() \
((DDS_TopicBuiltinTopicData*) dds_alloc (sizeof (DDS_TopicBuiltinTopicData)));

#define DDS_TopicBuiltinTopicData_free(d,o) \
dds_sample_free ((d), &DDS_TopicBuiltinTopicData_desc, (o))


typedef struct DDS_TypeBuiltinTopicData
{
  char * name;
  DDS_DataRepresentationId_t data_representation_id;
  DDS_TypeHash type_hash;
  DDS_octSeq meta_data;
  DDS_octSeq extentions;
} DDS_TypeBuiltinTopicData;

extern const dds_topic_descriptor_t DDS_TypeBuiltinTopicData_desc;

#define DDS_TypeBuiltinTopicData__alloc() \
((DDS_TypeBuiltinTopicData*) dds_alloc (sizeof (DDS_TypeBuiltinTopicData)));

#define DDS_TypeBuiltinTopicData_free(d,o) \
dds_sample_free ((d), &DDS_TypeBuiltinTopicData_desc, (o))


typedef struct DDS_PublicationBuiltinTopicData
{
  DDS_BuiltinTopicKey_t key;
  DDS_BuiltinTopicKey_t participant_key;
  char * topic_name;
  char * type_name;
  DDS_DurabilityQosPolicy durability;
  DDS_DeadlineQosPolicy deadline;
  DDS_LatencyBudgetQosPolicy latency_budget;
  DDS_LivelinessQosPolicy liveliness;
  DDS_ReliabilityQosPolicy reliability;
  DDS_LifespanQosPolicy lifespan;
  DDS_DestinationOrderQosPolicy destination_order;
  DDS_UserDataQosPolicy user_data;
  DDS_OwnershipQosPolicy ownership;
  DDS_OwnershipStrengthQosPolicy ownership_strength;
  DDS_PresentationQosPolicy presentation;
  DDS_PartitionQosPolicy partition;
  DDS_TopicDataQosPolicy topic_data;
  DDS_GroupDataQosPolicy group_data;
} DDS_PublicationBuiltinTopicData;

extern const dds_topic_descriptor_t DDS_PublicationBuiltinTopicData_desc;

#define DDS_PublicationBuiltinTopicData__alloc() \
((DDS_PublicationBuiltinTopicData*) dds_alloc (sizeof (DDS_PublicationBuiltinTopicData)));

#define DDS_PublicationBuiltinTopicData_free(d,o) \
dds_sample_free ((d), &DDS_PublicationBuiltinTopicData_desc, (o))


typedef struct DDS_SubscriptionBuiltinTopicData
{
  DDS_BuiltinTopicKey_t key;
  DDS_BuiltinTopicKey_t participant_key;
  char * topic_name;
  char * type_name;
  DDS_DurabilityQosPolicy durability;
  DDS_DeadlineQosPolicy deadline;
  DDS_LatencyBudgetQosPolicy latency_budget;
  DDS_LivelinessQosPolicy liveliness;
  DDS_ReliabilityQosPolicy reliability;
  DDS_OwnershipQosPolicy ownership;
  DDS_DestinationOrderQosPolicy destination_order;
  DDS_UserDataQosPolicy user_data;
  DDS_TimeBasedFilterQosPolicy time_based_filter;
  DDS_PresentationQosPolicy presentation;
  DDS_PartitionQosPolicy partition;
  DDS_TopicDataQosPolicy topic_data;
  DDS_GroupDataQosPolicy group_data;
} DDS_SubscriptionBuiltinTopicData;

extern const dds_topic_descriptor_t DDS_SubscriptionBuiltinTopicData_desc;

#define DDS_SubscriptionBuiltinTopicData__alloc() \
((DDS_SubscriptionBuiltinTopicData*) dds_alloc (sizeof (DDS_SubscriptionBuiltinTopicData)));

#define DDS_SubscriptionBuiltinTopicData_free(d,o) \
dds_sample_free ((d), &DDS_SubscriptionBuiltinTopicData_desc, (o))


typedef struct DDS_CMParticipantBuiltinTopicData
{
  DDS_BuiltinTopicKey_t key;
  DDS_ProductDataQosPolicy product;
} DDS_CMParticipantBuiltinTopicData;

extern const dds_topic_descriptor_t DDS_CMParticipantBuiltinTopicData_desc;

#define DDS_CMParticipantBuiltinTopicData__alloc() \
((DDS_CMParticipantBuiltinTopicData*) dds_alloc (sizeof (DDS_CMParticipantBuiltinTopicData)));

#define DDS_CMParticipantBuiltinTopicData_free(d,o) \
dds_sample_free ((d), &DDS_CMParticipantBuiltinTopicData_desc, (o))


typedef struct DDS_CMPublisherBuiltinTopicData
{
  DDS_BuiltinTopicKey_t key;
  DDS_ProductDataQosPolicy product;
  DDS_BuiltinTopicKey_t participant_key;
  char * name;
  DDS_EntityFactoryQosPolicy entity_factory;
  DDS_PartitionQosPolicy partition;
} DDS_CMPublisherBuiltinTopicData;

extern const dds_topic_descriptor_t DDS_CMPublisherBuiltinTopicData_desc;

#define DDS_CMPublisherBuiltinTopicData__alloc() \
((DDS_CMPublisherBuiltinTopicData*) dds_alloc (sizeof (DDS_CMPublisherBuiltinTopicData)));

#define DDS_CMPublisherBuiltinTopicData_free(d,o) \
dds_sample_free ((d), &DDS_CMPublisherBuiltinTopicData_desc, (o))


typedef struct DDS_CMSubscriberBuiltinTopicData
{
  DDS_BuiltinTopicKey_t key;
  DDS_ProductDataQosPolicy product;
  DDS_BuiltinTopicKey_t participant_key;
  char * name;
  DDS_EntityFactoryQosPolicy entity_factory;
  DDS_ShareQosPolicy share;
  DDS_PartitionQosPolicy partition;
} DDS_CMSubscriberBuiltinTopicData;

extern const dds_topic_descriptor_t DDS_CMSubscriberBuiltinTopicData_desc;

#define DDS_CMSubscriberBuiltinTopicData__alloc() \
((DDS_CMSubscriberBuiltinTopicData*) dds_alloc (sizeof (DDS_CMSubscriberBuiltinTopicData)));

#define DDS_CMSubscriberBuiltinTopicData_free(d,o) \
dds_sample_free ((d), &DDS_CMSubscriberBuiltinTopicData_desc, (o))


typedef struct DDS_CMDataWriterBuiltinTopicData
{
  DDS_BuiltinTopicKey_t key;
  DDS_ProductDataQosPolicy product;
  DDS_BuiltinTopicKey_t publisher_key;
  char * name;
  DDS_HistoryQosPolicy history;
  DDS_ResourceLimitsQosPolicy resource_limits;
  DDS_WriterDataLifecycleQosPolicy writer_data_lifecycle;
} DDS_CMDataWriterBuiltinTopicData;

extern const dds_topic_descriptor_t DDS_CMDataWriterBuiltinTopicData_desc;

#define DDS_CMDataWriterBuiltinTopicData__alloc() \
((DDS_CMDataWriterBuiltinTopicData*) dds_alloc (sizeof (DDS_CMDataWriterBuiltinTopicData)));

#define DDS_CMDataWriterBuiltinTopicData_free(d,o) \
dds_sample_free ((d), &DDS_CMDataWriterBuiltinTopicData_desc, (o))


typedef struct DDS_CMDataReaderBuiltinTopicData
{
  DDS_BuiltinTopicKey_t key;
  DDS_ProductDataQosPolicy product;
  DDS_BuiltinTopicKey_t subscriber_key;
  char * name;
  DDS_HistoryQosPolicy history;
  DDS_ResourceLimitsQosPolicy resource_limits;
  DDS_ReaderDataLifecycleQosPolicy reader_data_lifecycle;
  DDS_UserKeyQosPolicy subscription_keys;
  DDS_ReaderLifespanQosPolicy reader_lifespan;
  DDS_ShareQosPolicy share;
} DDS_CMDataReaderBuiltinTopicData;

extern const dds_topic_descriptor_t DDS_CMDataReaderBuiltinTopicData_desc;

#define DDS_CMDataReaderBuiltinTopicData__alloc() \
((DDS_CMDataReaderBuiltinTopicData*) dds_alloc (sizeof (DDS_CMDataReaderBuiltinTopicData)));

#define DDS_CMDataReaderBuiltinTopicData_free(d,o) \
dds_sample_free ((d), &DDS_CMDataReaderBuiltinTopicData_desc, (o))

#ifdef __cplusplus
}
#endif
#endif /* _DDSL_DDS_BUILTINTOPICS_H_ */
