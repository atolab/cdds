/*
 * Copyright(c) 2006 to 2018 ADLINK Technology Limited and others
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0, or the Eclipse Distribution License
 * v. 1.0 which is available at
 * http://www.eclipse.org/org/documents/edl-v10.php.
 *
 * SPDX-License-Identifier: EPL-2.0 OR BSD-3-Clause
 */

/*
 * dds_rtf2_dcps.idl needed for the declarations
 * of DDS Entities and DDS Entity Qos
 */

//#include "dds-xtypes_discovery.idl"  /* http://www.omg.org/spec/DDS-XTypes/20170301/dds-xtypes_discovery.idl */
//#include "dds_dcps_builtintopics.idl"
#include "../../ddsc/src/dds_builtinTopics.idl"

#include "../../ddsc/src/dds_dcps_builtintopics.idl"


#define DOMAINID_TYPE_NATIVE            long
#define HANDLE_TYPE_NATIVE              long long


module DDS {
    typedef sequence<octet> OctetSeq;

    module Security {

        struct Property_t {
            string name;
            string value;
            boolean propagate;
        };

        typedef sequence< Property_t >  PropertySeq;


        struct BinaryProperty_t {
            string name;
            OctetSeq value;
            boolean propagate;
        };
        typedef sequence< BinaryProperty_t >  BinaryPropertySeq;

        struct PropertyQosPolicy {
            PropertySeq        value;
            BinaryPropertySeq  binary_value;
        };



        struct DataHolder {
            string             class_id;
            /*@optional*/  PropertySeq        properties;
            /*@optional*/  BinaryPropertySeq  binary_properties;
        };
        typedef sequence<DataHolder> DataHolderSeq;

        typedef DataHolder Token;


        typedef Token MessageToken;
        typedef Token  IdentityToken;
        typedef Token  PermissionsToken;

        typedef Token IdentityStatusToken;

        struct DomainParticipantQos  {
            UserDataQosPolicy user_data;
            EntityFactoryQosPolicy entity_factory;
            SchedulingQosPolicy watchdog_scheduling;
            SchedulingQosPolicy listener_scheduling;
            PropertyQosPolicy  proIperty;
        };

        struct Tag {
            string name;
            string value;
        };

        typedef sequence< Tag > TagSeq;
        struct DataTags {
            TagSeq tags;
        };


        typedef DataTags DataTagQosPolicy;

        struct DataWriterQos   {
            DurabilityQosPolicy durability;
            DeadlineQosPolicy deadline;
            LatencyBudgetQosPolicy latency_budget;
            LivelinessQosPolicy liveliness;
            ReliabilityQosPolicy reliability;
            DestinationOrderQosPolicy destination_order;
            HistoryQosPolicy history;
            ResourceLimitsQosPolicy resource_limits;
            TransportPriorityQosPolicy transport_priority;
            LifespanQosPolicy lifespan;
            UserDataQosPolicy user_data;
            OwnershipQosPolicy ownership;
            OwnershipStrengthQosPolicy ownership_strength;
            WriterDataLifecycleQosPolicy writer_data_lifecycle;
            PropertyQosPolicy  property;
            DataTagQosPolicy   data_tags;
        };

        struct DataReaderQos   {
            DurabilityQosPolicy durability;
            DeadlineQosPolicy deadline;
            LatencyBudgetQosPolicy latency_budget;
            LivelinessQosPolicy liveliness;
            ReliabilityQosPolicy reliability;
            DestinationOrderQosPolicy destination_order;
            HistoryQosPolicy history;
            ResourceLimitsQosPolicy resource_limits;
            UserDataQosPolicy user_data;
            OwnershipQosPolicy ownership;
            TimeBasedFilterQosPolicy time_based_filter;
            ReaderDataLifecycleQosPolicy reader_data_lifecycle;
            SubscriptionKeyQosPolicy subscription_keys;
            ReaderLifespanQosPolicy reader_lifespan;
            ShareQosPolicy share;
            PropertyQosPolicy  property;
            DataTagQosPolicy   data_tags;
        };


        typedef unsigned long ParticipantSecurityAttributesMask;
        typedef unsigned long PluginParticipantSecurityAttributesMask;

        struct ParticipantSecurityInfo {
            ParticipantSecurityAttributesMask        participant_security_attributes;
            PluginParticipantSecurityAttributesMask  plugin_participant_security_attributes;
        };


        typedef unsigned long EndpointSecurityAttributesMask;
        typedef unsigned long PluginEndpointSecurityAttributesMask;
        struct EndpointSecurityInfo {
            EndpointSecurityAttributesMask        endpoint_security_mask;
            PluginEndpointSecurityAttributesMask  plugin_endpoint_security_mask;
        };


        struct ParticipantBuiltinTopicData  {
            BuiltinTopicKey_t key;
            UserDataQosPolicy user_data;
            IdentityToken     identity_token;
            PermissionsToken  permissions_token;
            PropertyQosPolicy property;
            ParticipantSecurityInfo  security_info;
        };


        struct ParticipantBuiltinTopicDataSecure   {
            BuiltinTopicKey_t key;
            UserDataQosPolicy user_data;
            IdentityToken     identity_token;
            PermissionsToken  permissions_token;
            PropertyQosPolicy property;
            ParticipantSecurityInfo  security_info;
            IdentityStatusToken identity_status_token;
        };


        struct PublicationBuiltinTopicData {
            BuiltinTopicKey_t key;
            BuiltinTopicKey_t participant_key;
            string topic_name;
            string type_name;
            DurabilityQosPolicy durability;
            DeadlineQosPolicy deadline;
            LatencyBudgetQosPolicy latency_budget;
            LivelinessQosPolicy liveliness;
            ReliabilityQosPolicy reliability;
            LifespanQosPolicy lifespan;
            DestinationOrderQosPolicy destination_order;
            UserDataQosPolicy user_data;
            OwnershipQosPolicy ownership;
            OwnershipStrengthQosPolicy ownership_strength;
            PresentationQosPolicy presentation;
            PartitionQosPolicy partition;
            TopicDataQosPolicy topic_data;
            GroupDataQosPolicy group_data;
            EndpointSecurityInfo  security_info;
        };


        struct SubscriptionBuiltinTopicData{
            BuiltinTopicKey_t key;
            BuiltinTopicKey_t participant_key;
            string topic_name;
            string type_name;
            DurabilityQosPolicy durability;
            DeadlineQosPolicy deadline;
            LatencyBudgetQosPolicy latency_budget;
            LivelinessQosPolicy liveliness;
            ReliabilityQosPolicy reliability;
            OwnershipQosPolicy ownership;
            DestinationOrderQosPolicy destination_order;
            UserDataQosPolicy user_data;
            TimeBasedFilterQosPolicy time_based_filter;
            PresentationQosPolicy presentation;
            PartitionQosPolicy partition;
            TopicDataQosPolicy topic_data;
            GroupDataQosPolicy group_data;
            EndpointSecurityInfo  security_info;
        };


        struct PublicationBuiltinTopicDataSecure   {
            BuiltinTopicKey_t key;
            BuiltinTopicKey_t participant_key;
            string topic_name;
            string type_name;
            DurabilityQosPolicy durability;
            DeadlineQosPolicy deadline;
            LatencyBudgetQosPolicy latency_budget;
            LivelinessQosPolicy liveliness;
            ReliabilityQosPolicy reliability;
            LifespanQosPolicy lifespan;
            DestinationOrderQosPolicy destination_order;
            UserDataQosPolicy user_data;
            OwnershipQosPolicy ownership;
            OwnershipStrengthQosPolicy ownership_strength;
            PresentationQosPolicy presentation;
            PartitionQosPolicy partition;
            TopicDataQosPolicy topic_data;
            GroupDataQosPolicy group_data;
            EndpointSecurityInfo  security_info;
            DataTags data_tags;
        };


        struct SubscriptionBuiltinTopicDataSecure { // it was :  DDS::SubscriptionBuiltinTopicData but it should SubscriptionBuiltinTopicData??? {
            BuiltinTopicKey_t key;
            BuiltinTopicKey_t participant_key;
            string topic_name;
            string type_name;
            DurabilityQosPolicy durability;
            DeadlineQosPolicy deadline;
            LatencyBudgetQosPolicy latency_budget;
            LivelinessQosPolicy liveliness;
            ReliabilityQosPolicy reliability;
            OwnershipQosPolicy ownership;
            DestinationOrderQosPolicy destination_order;
            UserDataQosPolicy user_data;
            TimeBasedFilterQosPolicy time_based_filter;
            PresentationQosPolicy presentation;
            PartitionQosPolicy partition;
            TopicDataQosPolicy topic_data;
            GroupDataQosPolicy group_data;
            EndpointSecurityInfo  security_info;
            DataTags data_tags;
        };



        struct ParticipantSecurityAttributes {
            boolean     allow_unauthenticated_participants;
            boolean     is_access_protected;
            boolean     is_rtps_protected;
            boolean     is_discovery_protected;
            boolean     is_liveliness_protected;
            ParticipantSecurityAttributesMask plugin_participant_attributes;
            PropertySeq ac_endpoint_properties;
        };



        struct EndpointSecurityAttributes {
            boolean  is_read_protected;
            boolean  is_write_protected;
            boolean  is_discovery_protected;
            boolean  is_liveliness_protected;
            boolean     is_submessage_protected;
            boolean     is_payload_protected;
            boolean     is_key_protected;
            PluginEndpointSecurityAttributesMask  plugin_endpoint_attributes;
            PropertySeq ac_endpoint_properties;
        };


        struct PluginEndpointSecurityAttributes {
            boolean     is_submessage_encrypted;
            boolean     is_payload_encrypted;
            boolean     is_submessage_origin_authenticated;
        };



    };
};


