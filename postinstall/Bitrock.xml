<project>
  <shortName>VortexOpenSplice</shortName>
  <fullName>Vortex OpenSplice __EDITION__ __VERSION__ __PLATFORM__ __INSTTYPE__</fullName>
  <version>__VERSION__</version>
  <installerFilename>__INSTALLER_FILENAME__.${platform_exec_suffix}</installerFilename>
  <readmeFile></readmeFile>
  <licenseFile>__LICENSE_TO_ACCEPT__</licenseFile>
  <wrapLicenseFileText>1</wrapLicenseFileText>
  <leftImage>__OSPL_OUTER_HOME__/install/images/leftImage.png</leftImage>
  <logoImage>__OSPL_OUTER_HOME__/install/images/logo.png</logoImage>
  <splashImage>__OSPL_OUTER_HOME__/install/images/splashImage.png</splashImage>
  <defaultLanguage>en</defaultLanguage>
  <allowLanguageSelection>0</allowLanguageSelection>
  <postInstallationScript></postInstallationScript>
  <postInstallationScriptArguments></postInstallationScriptArguments>
  <showPostInstallationScriptResult>0</showPostInstallationScriptResult>
  <preUninstallationScript></preUninstallationScript>
  <preUninstallationScriptArguments></preUninstallationScriptArguments>
  <allowedLanguages></allowedLanguages>
  <cdromDirectory>${product_shortname}-${product_version}-cdrom</cdromDirectory>
  <cdromDiskSize>700000000</cdromDiskSize>
  <cdromFirstDiskSize>650000000</cdromFirstDiskSize>
  <defaultInstallationMode>xwindow</defaultInstallationMode>
  <defaultUnixDirectoryPermissions>755</defaultUnixDirectoryPermissions>
  <defaultUnixFilePermissions>644</defaultUnixFilePermissions>
  <description>Vortex OpenSplice - __FULLINSTTYPE__</description>
  <outputDirectory>__OUTPUTDIR__</outputDirectory>
  <projectSchemaVersion>1.2</projectSchemaVersion>
  <installationScope>${installation_scope}</installationScope> <!-- applies only to Windows -->
  <saveRelativePaths>1</saveRelativePaths>
  <slideShowLoop>1</slideShowLoop>
  <slideShowTiming>5</slideShowTiming>
  <startMenuGroupName>VortexOpenSplice__EDITION__ __VNUM__ __INSTTYPE__ __PLATFORM__</startMenuGroupName>
  <style>standard</style>
  <summary>Vortex OpenSplice -- __FULLINSTTYPE__</summary>
  <uninstallerDirectory>${installdir}/__SUB_INSTALL_DIR__</uninstallerDirectory>
  <uninstallerName>uninstall-__PLATFORM__-__INSTTYPE__</uninstallerName>
  <validatorProgram></validatorProgram>
  <vendor>PrismTech</vendor>
  <windows64bitMode>0</windows64bitMode>
   <functionDefinitionList>
    <ruleDefinition>
      <name>needHostDirectoryInPath</name>
      <ruleEvaluationLogic>or</ruleEvaluationLogic>
      <ruleList>
        <compareText text="__SOURCE_TARGET_SHORT__" logic="equals" value="wince"/>
        <compareText text="__SOURCE_TARGET_SHORT__" logic="equals" value="vxworks"/>
        <compareText text="__SOURCE_TARGET_SHORT__" logic="equals" value="pikeos"/>
      </ruleList>
    </ruleDefinition>
    <ruleDefinition>
      <name>isWin64Bit</name>
      <ruleList>
        <isTrue value="${project.windows64bitMode}"/>
      </ruleList>
    </ruleDefinition>
  </functionDefinitionList>

  <componentList>
    <component>
      <name>default</name>
      <description>Default Component</description>
      <canBeEdited>1</canBeEdited>
      <detailedDescription></detailedDescription>
      <selected>1</selected>
      <show>1</show>
      <desktopShortcutList/>
      <folderList>
        <folder>
          <description>Program Files</description>
          <destination>${installdir}/__SUB_INSTALL_DIR__</destination>
          <name>programfiles</name>
          <platforms>all</platforms>
          <shortcutList/>
        </folder>
        <folder>
          <description>__INSTTYPE__</description>
          <destination>${installdir}/__SUB_INSTALL_DIR__/__INSTTYPE__</destination>
          <name>__INSTTYPE__</name>
          <platforms>__BUILDERPLATFORM__</platforms>
          <distributionFileList>
            <distributionDirectory>
              <origin>__INSTTYPE__/__PLATFORM__</origin>
            </distributionDirectory>
          </distributionFileList>
          <actionList>
            <substitute>
              <type>exact</type>
              <files>*/.project;*/.wrproject;*/.wrmakefile</files>
                <substitutionList>
                  <substitution>
                    <pattern>$(OSPL_HOME)</pattern>
                    <value>${installdir.unix}/__SUB_INSTALL_DIR__/__INSTTYPE__/__PLATFORM__</value>
                  </substitution>
                </substitutionList>
             </substitute>
           </actionList>
        </folder>
      </folderList>
      <startMenuShortcutList>
         <startMenuShortcut>
            <comment>Uninstall ${product_fullname}</comment>
            <name>Uninstall ${product_fullname}</name>
            <windowsExec>${installdir}\__SUB_INSTALL_DIR__\uninstall-__PLATFORM__-__INSTTYPE__.exe</windowsExec>
            <windowsExecArgs></windowsExecArgs>
            <windowsIcon>${installdir}\__SUB_INSTALL_DIR__\__INSTTYPE__\__PLATFORM__\etc\icons\opensplice_icon_uninstall.ico</windowsIcon>
            <windowsPath>${installdir}\__SUB_INSTALL_DIR__</windowsPath>
         </startMenuShortcut>
         <startMenuShortcut>
            <comment>Start your Vortex OpenSplice experience here</comment>
            <name>Launcher</name>
            <windowsExec>${installdir}\__SUB_INSTALL_DIR__\__INSTTYPE__\__PLATFORM__\bin\run.vbs</windowsExec>
            <windowsExecArgs>"${installdir}\__SUB_INSTALL_DIR__\__INSTTYPE__\__PLATFORM__\bin\ospllauncher.bat"</windowsExecArgs>
            <windowsIcon>${installdir}\__SUB_INSTALL_DIR__\__INSTTYPE__\__PLATFORM__\bin\app\icons\opensplice_icon_launch.ico</windowsIcon>
            <windowsPath>${installdir}\__SUB_INSTALL_DIR__</windowsPath>
            <ruleEvaluationLogic>and</ruleEvaluationLogic>
            <ruleList>
               <compareText text="__SOURCE_TARGET_SHORT__" logic="equals" value="win"/>
               <compareText text="__INSTTYPE__" logic="does_not_equal" value="RTS"/>
            </ruleList>
         </startMenuShortcut>
         <startMenuShortcut>
            <comment>Vortex OpenSplice command prompt</comment>
            <name>Vortex OpenSplice command prompt</name>
            <windowsExec>%comspec%</windowsExec>
            <windowsExecArgs>/k "${installdir}\__SUB_INSTALL_DIR__\__INSTTYPE__\__PLATFORM__\release.bat"</windowsExecArgs>
            <windowsIcon></windowsIcon>
            <windowsPath>${installdir}\__SUB_INSTALL_DIR__\__INSTTYPE__\__PLATFORM__</windowsPath>
            <ruleEvaluationLogic>and</ruleEvaluationLogic>
            <ruleList>
               <compareText text="__SOURCE_TARGET_SHORT__" logic="equals" value="vxworks"/>
               <compareText text="__INSTTYPE__" logic="does_not_equal" value="RTS"/>
            </ruleList>
         </startMenuShortcut>
         <startMenuShortcut>
            <comment>Configuration tool for Vortex OpenSplice</comment>
            <name>Vortex OpenSplice Configurator</name>
            <windowsExec>${installdir}\__SUB_INSTALL_DIR__\__INSTTYPE__\__PLATFORM__\bin\run.vbs</windowsExec>
            <windowsExecArgs>"${installdir}\__SUB_INSTALL_DIR__\__INSTTYPE__\__PLATFORM__\bin\osplconf.bat"</windowsExecArgs>
            <windowsIcon>${installdir}\__SUB_INSTALL_DIR__\__INSTTYPE__\__PLATFORM__\etc\icons\opensplice_icon_conf.ico</windowsIcon>
            <windowsPath>${installdir}\__SUB_INSTALL_DIR__</windowsPath>
            <ruleEvaluationLogic>and</ruleEvaluationLogic>
            <ruleList>
               <compareText text="__SOURCE_TARGET_SHORT__" logic="equals" value="vxworks"/>
               <compareText text="__INSTTYPE__" logic="does_not_equal" value="RTS"/>
            </ruleList>
         </startMenuShortcut>
         <startMenuShortcut>
            <comment>Regression testing tool for Vortex OpenSplice</comment>
            <name>Vortex OpenSplice Tester</name>
            <windowsExec>${installdir}\__SUB_INSTALL_DIR__\__INSTTYPE__\__PLATFORM__\bin\run.vbs</windowsExec>
            <windowsExecArgs>"${installdir}\__SUB_INSTALL_DIR__\__INSTTYPE__\__PLATFORM__\bin\ospltest.bat"</windowsExecArgs>
            <windowsIcon>${installdir}\__SUB_INSTALL_DIR__\__INSTTYPE__\__PLATFORM__\etc\icons\opensplice_icon_tester.ico</windowsIcon>
            <windowsPath>${installdir}\__SUB_INSTALL_DIR__</windowsPath>
            <ruleEvaluationLogic>and</ruleEvaluationLogic>
            <ruleList>
               <compareText text="__SOURCE_TARGET_SHORT__" logic="equals" value="vxworks"/>
               <compareText text="__INSTTYPE__" logic="does_not_equal" value="RTS"/>
            </ruleList>
         </startMenuShortcut>
         <startMenuShortcut>
            <comment>Control and Monitoring tool for Vortex OpenSplice</comment>
            <name>Vortex OpenSplice Tuner</name>
            <windowsExec>${installdir}\__SUB_INSTALL_DIR__\__INSTTYPE__\__PLATFORM__\bin\run.vbs</windowsExec>
            <windowsExecArgs>"${installdir}\__SUB_INSTALL_DIR__\__INSTTYPE__\__PLATFORM__\bin\ospltun.bat"</windowsExecArgs>
            <windowsIcon>${installdir}\__SUB_INSTALL_DIR__\__INSTTYPE__\__PLATFORM__\etc\icons\opensplice_icon_tuner.ico</windowsIcon>
            <windowsPath>${installdir}\__SUB_INSTALL_DIR__</windowsPath>
            <ruleEvaluationLogic>and</ruleEvaluationLogic>
            <ruleList>
               <compareText text="__SOURCE_TARGET_SHORT__" logic="equals" value="vxworks"/>
               <compareText text="__INSTTYPE__" logic="does_not_equal" value="RTS"/>
            </ruleList>
         </startMenuShortcut>
         <startMenuShortcut>
            <comment>Vortex OpenSplice Documentation</comment>
            <name>Vortex OpenSplice Documentation</name>
            <windowsExec>${installdir}\__SUB_INSTALL_DIR__\__INSTTYPE__\__PLATFORM__\index.html</windowsExec>
            <windowsExecArgs></windowsExecArgs>
            <windowsIcon></windowsIcon>
            <windowsPath>${installdir}\__SUB_INSTALL_DIR__</windowsPath>
            <ruleEvaluationLogic>and</ruleEvaluationLogic>
            <ruleList>
               <compareText text="__SOURCE_TARGET_SHORT__" logic="equals" value="vxworks"/>
               <compareText text="__INSTTYPE__" logic="does_not_equal" value="RTS"/>
            </ruleList>
         </startMenuShortcut>
       </startMenuShortcutList>
    </component>
  </componentList>
  <customLanguageFileList/>
  <parameterList>
    <directoryParameter>
      <name>installdir</name>
      <title></title>
      <description>Installer.Parameter.installdir.description</description>
      <explanation>Installer.Parameter.installdir.explanation</explanation>
      <value>__INSTALL_DIR__</value>
      <default>__INSTALL_DIR__</default>
      <allowEmptyValue>0</allowEmptyValue>
      <ask>yes</ask>
      <cliOptionName>prefix</cliOptionName>
      <leftImage></leftImage>
      <mustBeWritable>yes</mustBeWritable>
      <mustExist>0</mustExist>
      <width>30</width>
    </directoryParameter>
    <choiceParameter>
      <ask>yes</ask>
      <default>user</default>
      <description>installation scope</description>
      <explanation>Do you wish to install Vortex OpenSplice for only the current user or for all users of the machine?
Please note that the current user must have administrative privileges in order to install Vortex OpenSplice for all users.
Note: You should select all if you wish to install Vortex OpenSplice as a windows service.</explanation>
      <title>Vortex OpenSplice Installation Scope</title>
      <name>installation_scope</name>
      <displayType>radiobuttons</displayType>
      <optionList>
        <option>
          <value>user</value>
          <text>Current user only</text>
        </option>
        <option>
          <value>all</value>
          <text>All users</text>
        </option>
      </optionList>
      <ruleEvaluationLogic>and</ruleEvaluationLogic>
      <ruleList> <!-- Only ask this on Windows -->
        <compareText>
          <text>${platform_name}</text>
          <logic>equals</logic>
          <value>windows</value>
        </compareText>
      </ruleList>
      <validationActionList>
        <!-- Set a string description of the selected scope we can use to make the descriptions more pertinent -->
        <setInstallerVariable>
          <name>scope_string</name>
          <value>all users</value>
        </setInstallerVariable>

        <!-- Override variables with a 'user' value if parameter installation_scope is only this user -->
        <actionGroup>
          <actionList>
            <setInstallerVariable>
              <name>scope_string</name>
              <value>the current user</value>
            </setInstallerVariable>
          </actionList>
          <ruleList>
            <compareText>
              <text>${installation_scope}</text>
              <logic>equals</logic>
              <value>user</value>
            </compareText>
          </ruleList>
        </actionGroup>
      </validationActionList>
    </choiceParameter>

    <!-- If the installing user has specified 'all user' installation scope then we need
    to find out if they want users to share data and then if so where the 'temp' directory should be -->
    <choiceParameter>
      <ask>yes</ask>
      <default>no</default>
      <description>data sharing</description>
      <explanation>Do you wish all users of this installation to share a single Global Data Space?
This option is recommended if you intend to run Vortex OpenSplice applications under multiple user accounts on this computer simultaneously and wish them to communicate or if you wish to install Vortex OpenSplice as a windows service.</explanation>
      <title>Global Data Space Sharing</title>
      <name>share_global_data</name>
      <displayType>radiobuttons</displayType>
      <optionList>
        <option>
          <value>yes</value>
          <text>Share data between all users</text>
        </option>
        <option>
          <value>no</value>
          <text>Do not share data between users</text>
        </option>
      </optionList>
      <validationActionList>
      </validationActionList>
      <ruleEvaluationLogic>and</ruleEvaluationLogic>
      <ruleList> <!-- Only ask this on Windows -->
       <compareText>
         <text>${platform_name}</text>
         <logic>equals</logic>
         <value>windows</value>
       </compareText>
       <compareText> <!-- and if we are installing for all users -->
         <text>${installation_scope}</text>
         <logic>equals</logic>
         <value>all</value>
       </compareText>
     </ruleList>
    </choiceParameter>

    <!-- *Iff* share data was selected get a temp location -->
    <directoryParameter>
      <name>shared_tmp_dir</name>
      <title>Shared Global Data Space Temporary Files</title>
      <description>Directory:</description>
      <explanation>Please provide a directory path that OpenSplice can use for shared data files. This must be readable and writable by all users.</explanation>
      <value>c:/temp/ospl</value>
      <default>c:/temp/ospl</default>
      <allowEmptyValue>0</allowEmptyValue>
      <ask>yes</ask>
      <leftImage></leftImage>
      <mustBeWritable>yes</mustBeWritable>
      <mustExist>0</mustExist>
      <width>30</width>
      <ruleEvaluationLogic>and</ruleEvaluationLogic>
      <ruleList> <!-- Only ask this on Windows -->
       <compareText>
         <text>${platform_name}</text>
         <logic>equals</logic>
         <value>windows</value>
       </compareText>
       <compareText> <!-- and we are installing for all users -->
         <text>${installation_scope}</text>
         <logic>equals</logic>
         <value>all</value>
       </compareText>
       <compareText> <!-- and we have selected to share global data space -->
         <text>${share_global_data}</text>
         <logic>equals</logic>
         <value>yes</value>
       </compareText>
      </ruleList>
      <validationActionList>
        <createDirectory> <!-- Try and create a directory of that name ... -->
          <path>${shared_tmp_dir}</path>
          <ruleList>
            <fileTest> <!-- ...if that path doesn't exist already... -->
                <path>${shared_tmp_dir}</path>
                <condition>not_exists</condition>
            </fileTest>
          </ruleList>
        </createDirectory>
        <throwError> <!-- ... then error if that directory does not exist. -->
          <text>Shared temporary directory ${shared_tmp_dir} does not exist and cannnot be created.</text>
          <ruleList>
            <fileTest>
              <path>${shared_tmp_dir}</path>
              <condition>is_not_directory</condition>
            </fileTest>
          </ruleList>
        </throwError>
      </validationActionList>
    </directoryParameter>

    <booleanParameter>
      <name>setup_global_envs</name>
      <ask>yes</ask>
      <title>Set-up OpenSplice Environment Variables</title>
      <explanation>Do you wish to set the Vortex OpenSplice configuration environment variable values for this installation for ${scope_string}? This includes adding this Vortex OpenSplice installation to the search PATH and making this installation the default for ${scope_string}.

Note: this is required if you wish to configure the OpenSplice daemon to run as a Windows Service.

Warning: this will overwrite any Vortex OpenSplice Environment variables set for ${scope_string} in the same manner from previous installations.</explanation>
      <ruleList>
        <compareText>
          <text>${platform_name}</text>
          <logic>equals</logic>
          <value>windows</value>
        </compareText>
      </ruleList>
      <default>0</default>
      <value>0</value>
    </booleanParameter>

    <booleanParameter>
      <name>win_service_install</name>
      <ask>yes</ask>
      <title>Install the OpenSplice daemon as a Windows service.</title>
      <explanation>Do you wish to install the OpenSplice daemon as a Windows Service?
Note: The service will be configured to start automatically at system (re)start. This can be changed in the Windows Services control panel. After installation you must reboot your computer before you attempt to start the service.
</explanation>
      <ruleEvaluationLogic>and</ruleEvaluationLogic>
      <ruleList>
        <compareText>
          <text>${platform_name}</text>
          <logic>equals</logic>
          <value>windows</value>
        </compareText>
        <compareValues>
          <value1>${setup_global_envs}</value1>
          <logic>does_not_equal</logic>
          <value2>0</value2>
        </compareValues>
        <compareText> <!-- and we are installing for all users -->
         <text>${installation_scope}</text>
         <logic>equals</logic>
         <value>all</value>
       </compareText>
      </ruleList>
      <default>0</default>
      <value>0</value>
    </booleanParameter>

    <booleanParameter>
      <name>nw_already_has_license</name>
      <title>Obtaining a license</title>
      <explanation>This installer will automatically resolve the information that is required to obtain a license for the Vortex OpenSplice product. This information is available after installation in file: '${installdir}/__SUB_INSTALL_DIR__/__INSTTYPE__/__PLATFORM__/etc/license_info.txt'. Select option below to automatically configure your installation with an existing license file.</explanation>
      <ruleEvaluationLogic>and</ruleEvaluationLogic>
      <ruleList>
        <compareText>
          <text>${platform_name}</text>
          <logic>does_not_equal</logic>
          <value>windows</value>
        </compareText>
      </ruleList>
      <default>0</default>
      <value>0</value>
    </booleanParameter>
    <booleanParameter>
      <name>w_already_has_license</name>
      <title>Obtaining a license</title>
      <explanation>This installer will automatically resolve the information that is required to obtain a license for the Vortex OpenSplice product. This information is available after installation in file: '${installdir}\__SUB_INSTALL_DIR__\__INSTTYPE__\__PLATFORM__\etc\license_info.txt'. Select option below to automatically configure your installation with an existing license file.</explanation>
      <ruleEvaluationLogic>and</ruleEvaluationLogic>
      <ruleList>
        <compareText>
          <text>${platform_name}</text>
          <logic>equals</logic>
          <value>windows</value>
        </compareText>
      </ruleList>
      <default>0</default>
      <value>0</value>
    </booleanParameter>
    <fileParameter>
      <name>providedLicenseFile</name>
      <title>Please provide an existing license file (if available ...)</title>
      <explanation>If you already received a license file for this release, provide it here to get it installed automatically.</explanation>
      <description>License file to install automatically.</description>
      <value></value>
      <default></default>
      <allowEmptyValue>1</allowEmptyValue>
      <ask>yes</ask>
      <cliOptionName>providedLicenseFile</cliOptionName>
      <leftImage></leftImage>
      <mustBeWritable>no</mustBeWritable>
      <mustExist>1</mustExist>
      <width>30</width>
      <ruleEvaluationLogic>or</ruleEvaluationLogic>
      <ruleList>
        <compareValues>
          <value1>${nw_already_has_license}</value1>
          <logic>does_not_equal</logic>
          <value2>0</value2>
        </compareValues>
        <compareValues>
          <value1>${w_already_has_license}</value1>
          <logic>does_not_equal</logic>
          <value2>0</value2>
        </compareValues>
      </ruleList>
    </fileParameter>
  </parameterList>
  <platformOptionsList/>
  <preInstallationActionList>
    <actionGroup>
      <actionList>
         <setInstallerVariable>
           <name>osplLauncher</name>
           <value>launcher</value>
         </setInstallerVariable>
       </actionList>
    </actionGroup>

    <actionGroup>
      <actionList>
         <setInstallerVariable>
            <name>osplLauncher</name>
            <value>ospllauncher.bat</value>
            <ruleList>
               <compareText text="__SOURCE_TARGET_SHORT__" logic="equals" value="win"/>
            </ruleList>
         </setInstallerVariable>
      </actionList>
    </actionGroup>

    <!-- By default we do not require a windows reboot -->
    <setInstallerVariable>
      <name>machine_reboot_is_required</name>
      <value>0</value>
    </setInstallerVariable>

    <actionGroup>
      <actionList>
        <!-- If we install as a service we prompt the user to reboot the machine after install -->
        <setInstallerVariable>
          <name>machine_reboot_is_required</name>
          <value>1</value>
        </setInstallerVariable>
      </actionList>
      <ruleEvaluationLogic>and</ruleEvaluationLogic>
      <ruleList>
        <compareText text="__SOURCE_TARGET_SHORT__" logic="equals" value="win"/>
        <compareValues>
          <value1>${win_service_install}</value1>
          <logic>does_not_equal</logic>
          <value2>0</value2>
        </compareValues>
      </ruleList>
    </actionGroup>

    <actionGroup>
      <actionList>
        <autodetectJava>
          <validVersionList>
            <validVersion>
              <vendor>sun</vendor>
              <minVersion>1.6</minVersion>
            </validVersion>
          </validVersionList>
          <abortOnError>0</abortOnError>
          <showMessageOnError>0</showMessageOnError>
        </autodetectJava>
      </actionList>
      <ruleList>
        <compareText>
          <text>__PERFORM_JAVA_CHECK__</text>
          <logic>equals</logic>
          <value>yes</value>
        </compareText>
      </ruleList>
    </actionGroup>
    <showWarning>
      <text>The installer could not find a valid Java(tm) on this machine.
Supported versions:
Vendor: sun min: 1.6 max. any</text>
      <ruleEvaluationLogic>and</ruleEvaluationLogic>
      <ruleList>
        <compareValues>
          <value1>${java_version_major}</value1>
          <logic>less</logic>
          <value2>1.5</value2>
        </compareValues>
      </ruleList>
    </showWarning>

    <showWarning>
      <text>This installation contains debug symbols so a debug version of the Microsoft Visual C++ Redistributable must be present on the system for OpenSplice to work properly. These files are provided in the Program Files or Program Files (x86) directory in \Microsoft Visual Studio {version}\VC\redist\Debug_NonRedist\ directory</text>
      <ruleEvaluationLogic>and</ruleEvaluationLogic>
      <ruleList>
         <regExMatch>
            <logic>matches</logic>
            <pattern>.*(dev|debug).*</pattern>
            <text>${product_fullname}</text>
          </regExMatch>
          <compareText>
          <text>${platform_name}</text>
          <logic>equals</logic>
          <value>windows</value>
        </compareText>
      </ruleList>
    </showWarning>
  </preInstallationActionList>
  <postInstallationActionList>
     <actionGroup>
        <actionList>
           <createDirectory>
              <path>${installdir}/Vortex__VORTEX_VERSION__/license</path>      
           </createDirectory>
        </actionList>
        <ruleList>
           <fileTest path="${installdir}/Vortex__VORTEX_VERSION__/license" condition="not_exists"/>
        </ruleList>
     </actionGroup>
    <substitute>
      <ruleEvaluationLogic>or</ruleEvaluationLogic>
      <ruleList>
        <compareText text="__SOURCE_TARGET_SHORT__" logic="does_not_equal" value="pikeos"/>
        <compareText text="${platform_name}" logic="does_not_equal" value="windows"/>
      </ruleList>
      <files>${installdir}/__SUB_INSTALL_DIR__/__INSTTYPE__/__PLATFORM__/__SCRIPT_NAME__;${installdir}/__SUB_INSTALL_DIR__/__INSTTYPE__/__PLATFORM__/bin/launcher</files>
      <type>regexp</type>
      <substitutionList>
        <substitution>
          <pattern>@@INSTALLDIR@@</pattern>
          <value>${installdir}/__SUB_INSTALL_DIR__</value>
        </substitution>
        <substitution>
          <pattern>@@VORTEXDIR@@</pattern>
          <value>${installdir}/Vortex__VORTEX_VERSION__</value>
        </substitution>
        <substitution>
          <pattern>@@INSTTYPE@@</pattern>
          <value>__INSTTYPE__</value>
        </substitution>
        <substitution>
          <pattern>@@PLATFORM@@</pattern>
          <value>__PLATFORM__</value>
        </substitution>
        <substitution>
          <pattern>@@VERSION@@</pattern>
          <value>__VERSION__</value>
        </substitution>
      </substitutionList>
    </substitute>
    <substitute>
      <files>${installdir}/__SUB_INSTALL_DIR__/__INSTTYPE__/__PLATFORM__/etc/service_info.txt;${installdir}/__SUB_INSTALL_DIR__/__INSTTYPE__/__PLATFORM__/bin/__GETLIC_INFO__</files>
      <type>regexp</type>
      <substitutionList>
        <substitution>
          <pattern>@@INSTALLDIR@@</pattern>
          <value>${installdir}/__SUB_INSTALL_DIR__</value>
        </substitution>
        <substitution>
          <pattern>@@INSTTYPE@@</pattern>
          <value>__INSTTYPE__</value>
        </substitution>
        <substitution>
          <pattern>@@PLATFORM@@</pattern>
          <value>__PLATFORM__</value>
        </substitution>
        <substitution>
          <pattern>@@VERSION@@</pattern>
          <value>__VERSION__</value>
        </substitution>
      </substitutionList>
    </substitute>
    <changePermissions>
      <files>${installdir}/__SUB_INSTALL_DIR__/__INSTTYPE__/__PLATFORM__/__SCRIPT_NAME__</files>
      <permissions>444</permissions>
    </changePermissions>
    <changePermissions>
      <files>${installdir}/__SUB_INSTALL_DIR__/__INSTTYPE__/__PLATFORM__/bin/getlic_info</files>
      <permissions>444</permissions>
    </changePermissions>
    <changePermissions>
      <files>${installdir}/__SUB_INSTALL_DIR__/__INSTTYPE__/__PLATFORM__/etc/license_info.txt</files>
      <permissions>775</permissions>
    </changePermissions>
    <changePermissions>
      <files>${installdir}/__SUB_INSTALL_DIR__/__INSTTYPE__/__PLATFORM__/bin/ospllauncher</files>
      <permissions>775</permissions>
    </changePermissions>

    <!-- Set variables to install at system / all user level -->
    <setInstallerVariable>
      <name>registry_hive_key</name>
      <value>HKEY_LOCAL_MACHINE</value>
    </setInstallerVariable>
    <setInstallerVariable>
      <name>registry_and_path_scope</name>
      <value>system</value>
    </setInstallerVariable>

    <actionGroup>
      <actionList>
         <unzip>
           <destinationDirectory>${installdir}/__SUB_INSTALL_DIR__/__INSTTYPE__/__PLATFORM__/</destinationDirectory>
           <zipFile>${installdir}/__SUB_INSTALL_DIR__/__INSTTYPE__/__PLATFORM__/docs.zip</zipFile>
         </unzip>
         <deleteFile>
            <path>${installdir}/__SUB_INSTALL_DIR__/__INSTTYPE__/__PLATFORM__/docs.zip</path>
         </deleteFile>
       </actionList>
       <ruleList><compareText text="__INSTTYPE__" logic="does_not_equal" value="RTS"/></ruleList>
    </actionGroup>

    <!-- Override variables with per user values if parameter installation_scope is user -->
    <actionGroup>
      <actionList>
        <setInstallerVariable>
          <name>registry_hive_key</name>
          <value>HKEY_CURRENT_USER</value>
        </setInstallerVariable>
        <setInstallerVariable>
          <name>registry_and_path_scope</name>
          <value>user</value>
        </setInstallerVariable>
      </actionList>
      <ruleList>
        <compareText>
          <text>${installation_scope}</text>
          <logic>equals</logic>
          <value>user</value>
        </compareText>
      </ruleList>
    </actionGroup>

    <!-- If we are installed for all users, on windows and are sharing data then set the TEMP directory in release.bat -->
    <actionGroup>
      <actionList>
        <addTextToFile>
          <file>${installdir}/__SUB_INSTALL_DIR__/__INSTTYPE__/__PLATFORM__/__SCRIPT_NAME__</file>
          <text>set OSPL_TEMP=${shared_tmp_dir}</text>
        </addTextToFile>
      </actionList>
      <ruleEvaluationLogic>and</ruleEvaluationLogic>
      <ruleList>
        <compareText>
          <!-- Windows -->
          <text>${platform_name}</text>
          <logic>equals</logic>
          <value>windows</value>
        </compareText>
        <compareText>
          <!-- and we are installing for all users -->
          <text>${installation_scope}</text>
          <logic>equals</logic>
          <value>all</value>
        </compareText>
        <compareText>
          <!-- and we have selected to share global data space -->
          <text>${share_global_data}</text>
          <logic>equals</logic>
          <value>yes</value>
        </compareText>
      </ruleList>
    </actionGroup>

    <actionGroup>
      <actionList>
        <registrySet>
        <key>${registry_hive_key}\SOFTWARE\PrismTech\Vortex__VORTEX_VERSION__\VortexOpenSplice__EDITION__ __VERSION__ __INSTTYPE__ __PLATFORM__</key>
          <name>GLOBAL_VARS_SETUP</name>
          <value>${setup_global_envs}</value>
          <type>REG_SZ</type>
        </registrySet>
        <registrySet>
          <key>${registry_hive_key}\SOFTWARE\PrismTech\Vortex__VORTEX_VERSION__\VortexOpenSplice__EDITION__ __VERSION__ __INSTTYPE__ __PLATFORM__</key>
          <name>INSTALL_DIR</name>
          <value>${installdir}</value>
          <type>REG_SZ</type>
        </registrySet>
      </actionList>
      <ruleList>
        <compareText>
          <text>${platform_name}</text>
          <logic>equals</logic>
          <value>windows</value>
        </compareText>
      </ruleList>
    </actionGroup>

    <!-- Write a reg key if we're installled as a win service -->
    <actionGroup>
      <actionList>
        <registrySet>
          <key>${registry_hive_key}\SOFTWARE\PrismTech\Vortex__VORTEX_VERSION__\VortexOpenSplice__EDITION__ __VERSION__ __INSTTYPE__ __PLATFORM__</key>
          <name>InAsAService</name>
          <value>${win_service_install}</value>
          <type>REG_SZ</type>
        </registrySet>
      </actionList>
      <ruleEvaluationLogic>and</ruleEvaluationLogic>
      <ruleList>
        <compareText text="__SOURCE_TARGET_SHORT__" logic="equals" value="win"/>
        <compareValues>
          <value1>${win_service_install}</value1>
          <logic>does_not_equal</logic>
          <value2>0</value2>
        </compareValues>
      </ruleList>
    </actionGroup>

    <!-- Hell of a lot of repetition in this next bit where the env variables are set.  Reason is
         that Bitrock won't let you use variable expansion in the <scope> field. So we have to have
         everything listed twice. Once to set for 'system' and once for 'per user' -->

    <!-- System wide env setting -->
    <actionGroup>
      <actionList>
        <addEnvironmentVariable>
          <name>OSPL_HOME</name>
          <value>${installdir}\Vortex__VORTEX_VERSION__\Device\VortexOpenSplice\${product_version}\__INSTTYPE__\__PLATFORM__</value>
          <scope>system</scope>
        </addEnvironmentVariable>
        <addEnvironmentVariable>
          <name>VORTEX_DIR</name>
          <value>${installdir}\Vortex__VORTEX_VERSION__</value>
          <scope>system</scope>
        </addEnvironmentVariable>
        <addEnvironmentVariable>
          <name>prismtech_LICENSE</name>
          <value>${installdir}\Vortex__VORTEX_VERSION__\Device\VortexOpenSplice\${product_version}\__INSTTYPE__\__PLATFORM__\etc\license.lic</value>
          <scope>system</scope>
        </addEnvironmentVariable>
        <addEnvironmentVariable>
          <name>OSPL_TMPL_PATH</name>
          <value>${installdir}\Vortex__VORTEX_VERSION__\Device\VortexOpenSplice\${product_version}\__INSTTYPE__\__PLATFORM__\etc\idlpp</value>
          <scope>system</scope>
        </addEnvironmentVariable>
        <addEnvironmentVariable>
          <name>OSPL_URI</name>
          <value>file://${installdir}\Vortex__VORTEX_VERSION__\Device\VortexOpenSplice\${product_version}\__INSTTYPE__\__PLATFORM__\etc\config\ospl.xml</value>
          <scope>system</scope>
        </addEnvironmentVariable>
        <addDirectoryToPath>
          <path>${installdir}\__SUB_INSTALL_DIR__\__INSTTYPE__\__PLATFORM__\bin</path>
          <scope>system</scope>
        </addDirectoryToPath>
        <addDirectoryToPath>
          <path>${installdir}\__SUB_INSTALL_DIR__\__INSTTYPE__\__PLATFORM__\lib</path>
          <scope>system</scope>
        </addDirectoryToPath>
        <addDirectoryToPath>
          <path>${installdir}\__SUB_INSTALL_DIR__\__INSTTYPE__\__PLATFORM__\host\lib</path>
          <scope>system</scope>
          <ruleList>
              <needHostDirectoryInPath/>
          </ruleList>
        </addDirectoryToPath>
        <registrySet>
          <key>${registry_hive_key}\SOFTWARE\RLM License Manager</key>
          <name>prismtech_LICENSE</name>
          <!-- keep this value with slashes! Despite the fact that this is for windows! -->
          <value>${installdir}/__SUB_INSTALL_DIR__/__INSTTYPE__/__PLATFORM__/etc</value>
          <type>REG_SZ</type>
        </registrySet>
        <addEnvironmentVariable>
          <name>OSPL_TEMP</name>
          <value>${shared_tmp_dir}</value>
          <scope>system</scope>
          <ruleList>
            <compareText>
              <text>${share_global_data}</text>
              <logic>equals</logic>
              <value>yes</value>
            </compareText>
          </ruleList>
        </addEnvironmentVariable>
      </actionList>
      <ruleEvaluationLogic>and</ruleEvaluationLogic>
      <ruleList>
        <compareText>
          <text>${platform_name}</text>
          <logic>equals</logic>
          <value>windows</value>
        </compareText>
        <compareText>
          <text>${registry_and_path_scope}</text>
          <logic>equals</logic>
          <value>system</value>
        </compareText>
        <compareValues>
          <value1>${setup_global_envs}</value1>
          <logic>does_not_equal</logic>
          <value2>0</value2>
        </compareValues>
      </ruleList>
    </actionGroup>
    <!-- end of system env setting -->

    <!-- Per user env setting -->
    <actionGroup>
      <actionList>
        <addEnvironmentVariable>
          <name>OSPL_HOME</name>
          <value>${installdir}\Vortex__VORTEX_VERSION__\Device\VortexOpenSplice\${product_version}\__INSTTYPE__\__PLATFORM__</value>
          <scope>user</scope>
        </addEnvironmentVariable>
        <addEnvironmentVariable>
          <name>VORTEX_DIR</name>
          <value>${installdir}\Vortex__VORTEX_VERSION__</value>
          <scope>user</scope>
        </addEnvironmentVariable>
        <addEnvironmentVariable>
          <name>prismtech_LICENSE</name>
          <value>${installdir}\Vortex__VORTEX_VERSION__\Device\VortexOpenSplice\${product_version}\__INSTTYPE__\__PLATFORM__\etc\license.lic</value>
          <scope>user</scope>
        </addEnvironmentVariable>
        <addEnvironmentVariable>
          <name>OSPL_TMPL_PATH</name>
          <value>${installdir}\Vortex__VORTEX_VERSION__\Device\VortexOpenSplice\${product_version}\__INSTTYPE__\__PLATFORM__\etc\idlpp</value>
          <scope>user</scope>
        </addEnvironmentVariable>
        <addEnvironmentVariable>
          <name>OSPL_URI</name>
          <value>file://${installdir}\Vortex__VORTEX_VERSION__\Device\VortexOpenSplice\${product_version}\__INSTTYPE__\__PLATFORM__\etc\config\ospl.xml</value>
          <scope>user</scope>
        </addEnvironmentVariable>
        <addDirectoryToPath>
          <path>${installdir}\__SUB_INSTALL_DIR__\__INSTTYPE__\__PLATFORM__\bin</path>
          <scope>user</scope>
        </addDirectoryToPath>
        <addDirectoryToPath>
          <path>${installdir}\__SUB_INSTALL_DIR__\__INSTTYPE__\__PLATFORM__\lib</path>
          <scope>user</scope>
        </addDirectoryToPath>
        <addDirectoryToPath>
          <path>${installdir}\__SUB_INSTALL_DIR__\__INSTTYPE__\__PLATFORM__\host\lib</path>
          <scope>user</scope>
          <ruleList>
              <needHostDirectoryInPath/>
          </ruleList>
        </addDirectoryToPath>
        <registrySet>
          <key>${registry_hive_key}\SOFTWARE\RLM License Manager</key>
          <name>prismtech_LICENSE</name>
          <!-- keep this value with slashes! Despite the fact that this is for windows! -->
          <value>${installdir}/__SUB_INSTALL_DIR__/__INSTTYPE__/__PLATFORM__/etc</value>
          <type>REG_SZ</type>
        </registrySet>
        <addEnvironmentVariable>
          <name>OSPL_TEMP</name>
          <value>${shared_tmp_dir}</value>
          <scope>user</scope>
          <ruleList>
            <compareText>
              <text>${share_global_data}</text>
              <logic>equals</logic>
              <value>yes</value>
            </compareText>
          </ruleList>
        </addEnvironmentVariable>
      </actionList>
      <ruleEvaluationLogic>and</ruleEvaluationLogic>
      <ruleList>
        <compareText>
          <text>${platform_name}</text>
          <logic>equals</logic>
          <value>windows</value>
        </compareText>
        <compareText>
          <text>${registry_and_path_scope}</text>
          <logic>equals</logic>
          <value>user</value>
        </compareText>
        <compareValues>
          <value1>${setup_global_envs}</value1>
          <logic>does_not_equal</logic>
          <value2>0</value2>
        </compareValues>
      </ruleList>
    </actionGroup>
    <!-- end of per user env setting -->

    <actionGroup>
      <actionList>
	     <setInstallerVariable name="platform_type" value="x86"></setInstallerVariable>
	     <setInstallerVariable name="platform_type" value="x64">
	       <ruleList>
	        <isWin64Bit/>
	       </ruleList>
	     </setInstallerVariable>
        <runProgram>
          <program>${installdir}\__SUB_INSTALL_DIR__\__INSTTYPE__\__PLATFORM__\redist\vcredist_${platform_type}.exe</program>
          <programArguments>/q</programArguments>
          <abortOnError>1</abortOnError>
          <showMessageOnError>1</showMessageOnError>
        </runProgram>
      </actionList>
      <ruleList>
        <compareText>
          <text>${platform_name}</text>
          <logic>equals</logic>
          <value>windows</value>
        </compareText>
      </ruleList>
    </actionGroup>

    <!-- Run the NT service installer executable to configure spliced as a service -->
    <actionGroup>
      <actionList>
        <runProgram>
          <program>${installdir}\__SUB_INSTALL_DIR__\__INSTTYPE__\__PLATFORM__\bin\install_windows_service.bat</program>
          <programArguments/>
        </runProgram>
        <copyFile>
          <origin>${installdir}/__SUB_INSTALL_DIR__/__INSTTYPE__/__PLATFORM__/etc/config/ospl_winsvc_default.xml</origin>
          <destination>${installdir}/__SUB_INSTALL_DIR__/__INSTTYPE__/__PLATFORM__/etc/config/ospl.xml</destination>
        </copyFile>
      </actionList>
      <ruleEvaluationLogic>and</ruleEvaluationLogic>
      <ruleList>
        <compareText>
          <text>${platform_name}</text>
          <logic>equals</logic>
          <value>windows</value>
        </compareText>
        <compareValues>
          <value1>${win_service_install}</value1>
          <logic>does_not_equal</logic>
          <value2>0</value2>
        </compareValues>
      </ruleList>
    </actionGroup>
    <actionGroup>
      <actionList>
        <addTextToFile>
          <file>${installdir}\__SUB_INSTALL_DIR__\__INSTTYPE__\__PLATFORM__\etc\license_info.txt</file>
          <text>PRODUCT=${product_fullname}
</text>
        </addTextToFile>
        <addTextToFile>
          <file>${installdir}\__SUB_INSTALL_DIR__\__INSTTYPE__\__PLATFORM__\etc\license_info.txt</file>
          <text>VERSION=${product_version}
</text>
        </addTextToFile>
        <addTextToFile>
          <file>${installdir}\__SUB_INSTALL_DIR__\__INSTTYPE__\__PLATFORM__\etc\license_info.txt</file>
          <text>PLATFORM=${platform_name}
</text>
        </addTextToFile>
        <addTextToFile>
          <file>${installdir}\__SUB_INSTALL_DIR__\__INSTTYPE__\__PLATFORM__\etc\license_info.txt</file>
          <text>HOSTNAME=${machine_hostname}
</text>
        </addTextToFile>
        <addTextToFile>
          <file>${installdir}\__SUB_INSTALL_DIR__\__INSTTYPE__\__PLATFORM__\etc\license_info.txt</file>
          <text>IPADDR=${machine_ipaddr}
HOSTID=</text>
        </addTextToFile>
<!--
dds830
Workaround for BitRock problem. Uncomment this line when bitrock has solved the issue.
        <runProgram>
          <program>${installdir}\__SUB_INSTALL_DIR__\__INSTTYPE__\__PLATFORM__\bin\lmutil.exe</program>
          <programArguments>lmhostid -n &gt;&gt; "${installdir}\__INSTTYPE__\__PLATFORM__\etc\license_info.txt"</programArguments>
        </runProgram>
-->
        <runProgram>
          <program>${installdir}\__SUB_INSTALL_DIR__\__INSTTYPE__\__PLATFORM__\bin\getlic_info.bat</program>
          <programArguments></programArguments>
        </runProgram>
      </actionList>
      <ruleEvaluationLogic>and</ruleEvaluationLogic>
      <ruleList>
        <compareText>
          <text>__WITHLICENSE__</text>
          <logic>equals</logic>
          <value>true</value>
        </compareText>
        <compareText>
          <text>${platform_name}</text>
          <logic>equals</logic>
          <value>windows</value>
        </compareText>
      </ruleList>
    </actionGroup>
    <actionGroup>
      <actionList>
        <addTextToFile>
          <file>${installdir}/__SUB_INSTALL_DIR__/__INSTTYPE__/__PLATFORM__/etc/license_info.txt</file>
          <text>PRODUCT=${product_fullname}
</text>
        </addTextToFile>
        <addTextToFile>
          <file>${installdir}/__SUB_INSTALL_DIR__/__INSTTYPE__/__PLATFORM__/etc/license_info.txt</file>
          <text>VERSION=${product_version}
</text>
        </addTextToFile>
        <addTextToFile>
          <file>${installdir}/__SUB_INSTALL_DIR__/__INSTTYPE__/__PLATFORM__/etc/license_info.txt</file>
          <text>PLATFORM=${platform_name}
</text>
        </addTextToFile>
        <addTextToFile>
          <file>${installdir}/__SUB_INSTALL_DIR__/__INSTTYPE__/__PLATFORM__/etc/license_info.txt</file>
          <text>HOSTNAME=${machine_hostname}
</text>
        </addTextToFile>
        <addTextToFile>
          <file>${installdir}/__SUB_INSTALL_DIR__/__INSTTYPE__/__PLATFORM__/etc/license_info.txt</file>
          <text>IPADDR=${machine_ipaddr}
HOSTID=</text>
        </addTextToFile>
        <runProgram>
          <program>${installdir}/__SUB_INSTALL_DIR__/__INSTTYPE__/__PLATFORM__/bin/rlmutil</program>
          <programArguments>rlmhostid -n &gt;&gt; ${installdir}/__SUB_INSTALL_DIR__/__INSTTYPE__/__PLATFORM__/etc/license_info.txt</programArguments>
        </runProgram>
      </actionList>
      <ruleEvaluationLogic>and</ruleEvaluationLogic>
      <ruleList>
        <compareText>
          <text>__WITHLICENSE__</text>
          <logic>equals</logic>
          <value>true</value>
        </compareText>
        <compareText>
          <text>${platform_name}</text>
          <logic>does_not_equal</logic>
          <value>windows</value>
        </compareText>
      </ruleList>
    </actionGroup>

    <!-- Set the correct windows access levels for the examples directories so that
         any user can build to them -->
    <actionGroup>
      <actionList>
        <clearWindowsACL>
          <files>${installdir}/__SUB_INSTALL_DIR__/__INSTTYPE__/__PLATFORM__</files>
        </clearWindowsACL>
        <setWindowsACL>
          <action>allow</action>
          <recurseObjects>1</recurseObjects>
          <recurseContainers>1</recurseContainers>
          <files>${installdir}/__SUB_INSTALL_DIR__/__INSTTYPE__/__PLATFORM__</files>
          <permissions>generic_all</permissions>
          <users>S-1-1-0</users>
        </setWindowsACL>
      </actionList>
    </actionGroup>

    <setInstallerVariable>
       <name>runLauncher</name>
       <value>0</value>
    </setInstallerVariable>

   <setInstallerVariable>
       <name>runLauncher</name>
       <value>1</value>
       <ruleEvaluationLogic>or</ruleEvaluationLogic>
       <ruleList>
          <fileExists>
             <path>${installdir}/__SUB_INSTALL_DIR__/__INSTTYPE__/__PLATFORM__/bin/ospllauncher</path>
          </fileExists>
          <fileExists>
             <path>${installdir}/__SUB_INSTALL_DIR__/__INSTTYPE__/__PLATFORM__/bin/ospllauncher.bat</path>
          </fileExists>
       </ruleList>
   </setInstallerVariable>

   <addDirectoriesToUninstaller>
      <addContents>1</addContents>
      <files>${installdir}/__SUB_INSTALL_DIR__/docs</files>
   </addDirectoriesToUninstaller>
  </postInstallationActionList>

  <finalPageActionList>
    <copyFile>
      <origin>${providedLicenseFile}</origin>
      <destination>${installdir}/__SUB_INSTALL_DIR__/__INSTTYPE__/__PLATFORM__/etc/license.lic</destination>
      <progressText>Installing provided license file</progressText>
      <ruleEvaluationLogic>or</ruleEvaluationLogic>
      <ruleList>
        <compareValues>
          <value1>${w_already_has_license}</value1>
          <logic>does_not_equal</logic>
          <value2>0</value2>
        </compareValues>
        <compareValues>
          <value1>${nw_already_has_license}</value1>
          <logic>does_not_equal</logic>
          <value2>0</value2>
        </compareValues>
      </ruleList>
    </copyFile>
    <runProgram>
        <progressText>The Vortex OpenSplice Launcher will now be started</progressText>
        <program>${installdir}/__SUB_INSTALL_DIR__/__INSTTYPE__/__PLATFORM__/bin/${osplLauncher}</program> 
        <ruleEvaluationLogic>and</ruleEvaluationLogic>
        <ruleList>
           <compareText text="__INSTTYPE__" logic="does_not_equal" value="RTS"/>
           <compareValues>
             <value1>${runLauncher}</value1>
             <logic>equals</logic>
             <value2>1</value2>
           </compareValues>
        </ruleList> 
    </runProgram>

    <launchBrowser url="file://${installdir}/__SUB_INSTALL_DIR__/__INSTTYPE__/__PLATFORM__/index.html" progressText="View Vortex OpenSplice documentation.">
        <ruleEvaluationLogic>and</ruleEvaluationLogic>
        <ruleList>
           <compareText text="__INSTTYPE__" logic="does_not_equal" value="RTS"/>
           <compareValues>
             <value1>${runLauncher}</value1>
             <logic>equals</logic>
             <value2>0</value2>
           </compareValues>
        </ruleList>
     </launchBrowser>
  </finalPageActionList>

  <preBuildActionList/>

  <preUninstallationActionList>
    <!-- Work out if the installation was system wide or per user -->
    <actionGroup>
      <actionList>
        <!-- Default to assuming a system wide installation -->
        <setInstallerVariable>
          <name>registry_hive_key</name>
          <value>HKEY_LOCAL_MACHINE</value>
        </setInstallerVariable>
        <setInstallerVariable>
          <name>registry_and_path_scope</name>
          <value>system</value>
        </setInstallerVariable>
        <!-- If we found a per user install registry key then we will reset the variables for the reg key and env addition scope to
             be deleted on per user basis -->
        <!-- I would like to just use the command below. I can't because BitRock is buggy junk with hopelessly incomplete docs
        <registryGetKey>
          <variable>user_key_name</variable>
          <key>HKEY_CURRENT_USER\SOFTWARE\PrismTech\Vortex __VORTEX_VERSION__\VortexOpenSplice__EDITION__ __VERSION__ __INSTTYPE__ __PLATFORM__</key>
        </registryGetKey>
        ... so instead I have to do the below ridiculously overly complicated hackery (which at least works) -->
        <registryGet>
          <variable>some_user_key_value</variable>
          <key>HKEY_CURRENT_USER\SOFTWARE\PrismTech\Vortex__VORTEX_VERSION__\VortexOpenSplice__EDITION__ __VERSION__ __INSTTYPE__ __PLATFORM__</key>
          <name>GLOBAL_VARS_SETUP</name>
        </registryGet>
        <actionGroup>
          <actionList>
            <!-- Set current user hive key and 'user' scope -->
            <setInstallerVariable>
              <name>registry_hive_key</name>
              <value>HKEY_CURRENT_USER</value>
            </setInstallerVariable>
            <setInstallerVariable>
              <name>registry_and_path_scope</name>
              <value>user</value>
            </setInstallerVariable>
          </actionList>
          <ruleEvaluationLogic>or</ruleEvaluationLogic>
          <ruleList>
            <!-- We don't care about the value here - just that it existed on a user key (i.e. is 0 or 1)-->
            <compareText>
              <text>${some_user_key_value}</text>
              <logic>equals</logic>
              <value>1</value>
            </compareText>
            <compareText>
              <text>${some_user_key_value}</text>
              <logic>equals</logic>
              <value>0</value>
            </compareText>
          </ruleList>
        </actionGroup>
      </actionList>
      <ruleList>
        <compareText>
          <text>${platform_name}</text>
          <logic>equals</logic>
          <value>windows</value>
        </compareText>
      </ruleList>
    </actionGroup>

    <!-- See if we were installed as a windows service -->
    <actionGroup>
      <actionList>
        <registryGet>
          <variable>win_service_installed</variable>
          <key>${registry_hive_key}\SOFTWARE\PrismTech\Vortex__VORTEX_VERSION__\VortexOpenSplice__EDITION__ __VERSION__ __INSTTYPE__ __PLATFORM__</key>
          <name>InAsAService</name>
        </registryGet>
      </actionList>
      <ruleEvaluationLogic>and</ruleEvaluationLogic>
      <ruleList>
        <compareText>
          <text>${platform_name}</text>
          <logic>equals</logic>
          <value>windows</value>
        </compareText>
      </ruleList>
    </actionGroup>

    <!-- Uninstall as a windows service, if it was -->
    <actionGroup>
      <actionList>
        <runProgram>
          <program>${installdir}\__SUB_INSTALL_DIR__\__INSTTYPE__\__PLATFORM__\bin\uninstall_windows_service.bat</program>
          <programArguments/>
        </runProgram>
        <deleteFile>
            <path>${installdir}\__SUB_INSTALL_DIR__\__INSTTYPE__\__PLATFORM__\bin\InstallUtil.InstallLog</path>
        </deleteFile>
        <deleteFile>
            <path>${installdir}\__SUB_INSTALL_DIR__\__INSTTYPE__\__PLATFORM__\bin\spliced_service.InstallLog</path>
        </deleteFile>
        <deleteEnvironmentVariable>
          <name>OSPL_LOGPATH</name>
          <scope>system</scope>
        </deleteEnvironmentVariable>
      </actionList>
      <ruleEvaluationLogic>and</ruleEvaluationLogic>
      <ruleList>
        <compareText text="__SOURCE_TARGET_SHORT__" logic="equals" value="win"/>
        <compareValues>
          <value1>${win_service_installed}</value1>
          <logic>equals</logic>
          <value2>1</value2>
        </compareValues>
      </ruleList>
    </actionGroup>
    <actionGroup>
       <actionList>
          <deleteFile path="${installdir}\__SUB_INSTALL_DIR__\__INSTTYPE__\__PLATFORM__\docs"/>
       </actionList>
       <ruleList><compareText text="__INSTTYPE__" logic="does_not_equal" value="RTS"/></ruleList>
    </actionGroup>
  </preUninstallationActionList>

  <!-- Uninstallation -->
  <postUninstallationActionList>
    <actionGroup>
      <actionList>
        <registryGet>
          <variable>global_vars_set</variable>
          <key>${registry_hive_key}\SOFTWARE\PrismTech\Vortex__VORTEX_VERSION__\VortexOpenSplice__EDITION__ __VERSION__ __INSTTYPE__ __PLATFORM__</key>
          <name>GLOBAL_VARS_SETUP</name>
        </registryGet>
      </actionList>
      <ruleList>
        <compareText>
          <text>${platform_name}</text>
          <logic>equals</logic>
          <value>windows</value>
        </compareText>
      </ruleList>
    </actionGroup>

    <actionGroup>
      <actionList>
        <registryDelete>
          <abortOnError>0</abortOnError>
          <key>${registry_hive_key}\SOFTWARE\PrismTech\Vortex__VORTEX_VERSION__\VortexOpenSplice__EDITION__ __VERSION__ __INSTTYPE__ __PLATFORM__</key>
          <name>InAsAService</name>
          <showMessageOnError>0</showMessageOnError>
        </registryDelete>
        <registryDelete>
          <abortOnError>0</abortOnError>
          <key>${registry_hive_key}\SOFTWARE\PrismTech\Vortex__VORTEX_VERSION__\VortexOpenSplice__EDITION__ __VERSION__ __INSTTYPE__ __PLATFORM__</key>
          <name>GLOBAL_VARS_SETUP</name>
          <showMessageOnError>0</showMessageOnError>
        </registryDelete>
        <registryDelete>
          <abortOnError>0</abortOnError>
          <key>${registry_hive_key}\SOFTWARE\PrismTech\Vortex__VORTEX_VERSION__\VortexOpenSplice__EDITION__ __VERSION__ __INSTTYPE__ __PLATFORM__</key>
          <name>INSTALL_DIR</name>
          <showMessageOnError>0</showMessageOnError>
        </registryDelete>
      </actionList>
      <ruleList>
        <compareText>
          <text>${platform_name}</text>
          <logic>equals</logic>
          <value>windows</value>
        </compareText>
      </ruleList>
    </actionGroup>

    <!-- Completely remove the product key -->
    <actionGroup>
      <actionList>
        <registryDelete>
          <abortOnError>0</abortOnError>
          <key>${registry_hive_key}\SOFTWARE\PrismTech\Vortex__VORTEX_VERSION__\VortexOpenSplice__EDITION__ __VERSION__ __INSTTYPE__ __PLATFORM__</key>
          <showMessageOnError>0</showMessageOnError>
        </registryDelete>
      </actionList>
      <ruleList>
        <compareText>
          <text>${platform_name}</text>
          <logic>equals</logic>
          <value>windows</value>
        </compareText>
      </ruleList>
    </actionGroup>

    <actionGroup>
      <actionList>
        <showQuestion text="Do you wish to remove the Vortex OpenSplice global environment variables?" variable="remove_global_envs" />
      </actionList>
      <ruleEvaluationLogic>and</ruleEvaluationLogic>
      <ruleList>
        <compareText>
          <text>${platform_name}</text>
          <logic>equals</logic>
          <value>windows</value>
        </compareText>
        <compareText>
          <text>${global_vars_set}</text>
          <logic>equals</logic>
          <value>1</value>
        </compareText>
      </ruleList>
    </actionGroup>

    <!-- See comments above where env values are set. Everything again below has to be listed twice.
         Once to unset for 'system' and once for the alternate 'per user' case-->

    <!-- System wide env removals -->
    <actionGroup>
      <actionList>
        <deleteEnvironmentVariable>
          <name>OSPL_HOME</name>
          <scope>system</scope>
        </deleteEnvironmentVariable>
        <deleteEnvironmentVariable>
          <name>prismtech_LICENSE</name>
          <scope>system</scope>
        </deleteEnvironmentVariable>
        <deleteEnvironmentVariable>
          <name>OSPL_TMPL_PATH</name>
          <scope>system</scope>
        </deleteEnvironmentVariable>
        <deleteEnvironmentVariable>
          <name>OSPL_URI</name>
          <scope>system</scope>
        </deleteEnvironmentVariable>
        <deleteEnvironmentVariable>
          <name>VORTEX_DIR</name>
          <scope>system</scope>
        </deleteEnvironmentVariable>
        <removeDirectoryFromPath>
          <path>${installdir}\__SUB_INSTALL_DIR__\__INSTTYPE__\__PLATFORM__\bin</path>
          <scope>system</scope>
        </removeDirectoryFromPath>
        <removeDirectoryFromPath>
          <path>${installdir}\__SUB_INSTALL_DIR__\__INSTTYPE__\__PLATFORM__\lib</path>
          <scope>system</scope>
        </removeDirectoryFromPath>
        <removeDirectoryFromPath>
          <path>${rinstalldir}\__SUB_INSTALL_DIR__\__INSTTYPE__\__PLATFORM__\host\lib</path>
          <scope>system</scope>
          <ruleList>
              <needHostDirectoryInPath/>
          </ruleList>
        </removeDirectoryFromPath>
        <!-- NB @todo I don't know why this is here rather than with other reg key deletion -->
        <registryDelete>
          <abortOnError>0</abortOnError>
          <key>${registry_hive_key}\SOFTWARE\RLM License Manager</key>
          <name>prismtech_LICENSE</name>
          <showMessageOnError>0</showMessageOnError>
        </registryDelete>
        <deleteEnvironmentVariable>
          <name>OSPL_TEMP</name>
          <scope>system</scope>
        </deleteEnvironmentVariable>
      </actionList>
      <ruleEvaluationLogic>and</ruleEvaluationLogic>
      <ruleList>
        <compareText>
          <text>${registry_and_path_scope}</text>
          <logic>equals</logic>
          <value>system</value>
        </compareText>
        <compareText>
          <text>${platform_name}</text>
          <logic>equals</logic>
          <value>windows</value>
        </compareText>
        <compareValues>
          <value1>${remove_global_envs}</value1>
          <logic>equals</logic>
          <value2>yes</value2>
        </compareValues>
      </ruleList>
    </actionGroup>


    <!-- Per user env removals -->
    <actionGroup>
      <actionList>
        <deleteEnvironmentVariable>
          <name>OSPL_HOME</name>
          <scope>user</scope>
        </deleteEnvironmentVariable>
        <deleteEnvironmentVariable>
          <name>prismtech_LICENSE</name>
          <scope>user</scope>
        </deleteEnvironmentVariable>
        <deleteEnvironmentVariable>
          <name>OSPL_TMPL_PATH</name>
          <scope>user</scope>
        </deleteEnvironmentVariable>
        <deleteEnvironmentVariable>
          <name>OSPL_URI</name>
          <scope>user</scope>
        </deleteEnvironmentVariable>
       <deleteEnvironmentVariable>
          <name>VORTEX_DIR</name>
          <scope>user</scope>
        </deleteEnvironmentVariable>
        <removeDirectoryFromPath>
          <path>${installdir}\__SUB_INSTALL_DIR__\__INSTTYPE__\__PLATFORM__\bin</path>
          <scope>user</scope>
        </removeDirectoryFromPath>
        <removeDirectoryFromPath>
          <path>${installdir}\__SUB_INSTALL_DIR__\__INSTTYPE__\__PLATFORM__\lib</path>
          <scope>user</scope>
        </removeDirectoryFromPath>
        <removeDirectoryFromPath>
          <path>${installdir}\__SUB_INSTALL_DIR__\__INSTTYPE__\__PLATFORM__\host\lib</path>
          <scope>user</scope>
          <ruleList>
              <needHostDirectoryInPath/>
          </ruleList>
        </removeDirectoryFromPath>
        <!-- NB @todo I don't know why this is here rather than with other reg key deletion -->
        <registryDelete>
          <abortOnError>0</abortOnError>
          <key>${registry_hive_key}\SOFTWARE\RLM License Manager</key>
          <name>prismtech_LICENSE</name>
          <showMessageOnError>0</showMessageOnError>
        </registryDelete>
        <deleteEnvironmentVariable>
          <name>OSPL_TEMP</name>
          <scope>user</scope>
        </deleteEnvironmentVariable>
      </actionList>
      <ruleEvaluationLogic>and</ruleEvaluationLogic>
      <ruleList>
        <compareText>
          <text>${registry_and_path_scope}</text>
          <logic>equals</logic>
          <value>user</value>
        </compareText>
        <compareText>
          <text>${platform_name}</text>
          <logic>equals</logic>
          <value>windows</value>
        </compareText>
        <compareValues>
          <value1>${remove_global_envs}</value1>
          <logic>equals</logic>
          <value2>yes</value2>
        </compareValues>
      </ruleList>
    </actionGroup>
    <actionGroup>
      <actionList>
         <deleteFile> 
            <path>${windows_folder_programs}/PrismTech/__SUB_INSTALL_DIR__/__INSTTYPE__ __PLATFORM__</path> 
          </deleteFile>
      </actionList>
      <ruleList>
         <fileTest path="${windows_folder_programs}/PrismTech/__SUB_INSTALL_DIR__/__INSTTYPE__ __PLATFORM__" condition="exists"/>
      </ruleList>
    </actionGroup>
    <actionGroup>
      <actionList>
         <deleteFile> 
            <path>${windows_folder_programs}/PrismTech/__SUB_INSTALL_DIR__</path> 
          </deleteFile>
      </actionList>
      <ruleEvaluationLogic>and</ruleEvaluationLogic>
      <ruleList>
         <fileTest path="${windows_folder_programs}/PrismTech/__SUB_INSTALL_DIR__" condition="exists"/>
         <fileTest path="${windows_folder_programs}/PrismTech/__SUB_INSTALL_DIR__" condition="is_empty"/>
      </ruleList>
    </actionGroup>
    <actionGroup>
      <actionList>
         <deleteFile> 
            <path>${windows_folder_programs}/PrismTech/Vortex__VORTEX_VERSION__/Device/VortexOpenSplice__EDITION__</path> 
          </deleteFile>
      </actionList>
      <ruleEvaluationLogic>and</ruleEvaluationLogic>
      <ruleList>
         <fileTest path="${windows_folder_programs}/PrismTech/Vortex__VORTEX_VERSION__/Device/VortexOpenSplice__EDITION__" condition="exists"/>
         <fileTest path="${windows_folder_programs}/PrismTech/Vortex__VORTEX_VERSION__/Device/VortexOpenSplice__EDITION__" condition="is_empty"/>
      </ruleList>
    </actionGroup>
    <actionGroup>
      <actionList>
         <deleteFile> 
            <path>${windows_folder_programs}/PrismTech/Vortex__VORTEX_VERSION__/Device</path> 
          </deleteFile>
      </actionList>
      <ruleEvaluationLogic>and</ruleEvaluationLogic>
      <ruleList>
         <fileTest path="${windows_folder_programs}/PrismTech/Vortex__VORTEX_VERSION__/Device" condition="exists"/>
         <fileTest path="${windows_folder_programs}/PrismTech/Vortex__VORTEX_VERSION__/Device" condition="is_empty"/>
      </ruleList>
    </actionGroup>
    <actionGroup>
      <actionList>
         <deleteFile> 
            <path>${windows_folder_programs}/PrismTech/Vortex__VORTEX_VERSION__</path> 
          </deleteFile>
      </actionList>
      <ruleEvaluationLogic>and</ruleEvaluationLogic>
      <ruleList>
         <fileTest path="${windows_folder_programs}/PrismTech/Vortex__VORTEX_VERSION__" condition="exists"/>
         <fileTest path="${windows_folder_programs}/PrismTech/Vortex__VORTEX_VERSION__" condition="is_empty"/>
      </ruleList>
    </actionGroup>
    <actionGroup>
      <actionList>
         <deleteFile> 
            <path>${windows_folder_programs}/PrismTech/</path> 
          </deleteFile>
      </actionList>
      <ruleEvaluationLogic>and</ruleEvaluationLogic>
      <ruleList>
         <fileTest path="${windows_folder_programs}/PrismTech" condition="exists"/>
         <fileTest path="${windows_folder_programs}/PrismTech" condition="is_empty"/>
      </ruleList>
    </actionGroup>
  </postUninstallationActionList>

  <!--<preUninstallationActionList>
    <actionGroup>
      <actionList>
        <runProgram>
          <program>${installdir}\__SUB_INSTALL_DIR__\__INSTTYPE__\__PLATFORM__\bin\ServiceUtil.exe</program>
          <programArguments>remove "${installdir}\__SUB_INSTALL_DIR__\__INSTTYPE__\__PLATFORM__\etc\service_info.txt"</programArguments>
        </runProgram>
      </actionList>
      <ruleEvaluationLogic>and</ruleEvaluationLogic>
      <ruleList>
        <compareText text="__SOURCE_TARGET_SHORT__" logic="equals" value="win"/>
        <compareText>
          <text>__INSTTYPE__</text>
          <logic>equals</logic>
          <value>RTS</value>
        </compareText>
      </ruleList>
    </actionGroup>
  </preUninstallationActionList>
-->

 <slideShowImageList>
    <slideShowImage>
      <path>__OSPL_OUTER_HOME__/install/images/billboard.png</path>
    </slideShowImage>
    <slideShowImage>
      <path>__OSPL_OUTER_HOME__/install/images/billboard2.png</path>
    </slideShowImage>
    <slideShowImage>
      <path>__OSPL_OUTER_HOME__/install/images/billboard3.png</path>
    </slideShowImage>
    <slideShowImage>
      <path>__OSPL_OUTER_HOME__/install/images/billboard4.png</path>
    </slideShowImage>
    <slideShowImage>
      <path>__OSPL_OUTER_HOME__/install/images/billboard5.png</path>
    </slideShowImage>
  </slideShowImageList>
  <rebootRequired>${machine_reboot_is_required}</rebootRequired>
  <removeLogFile>1</removeLogFile>
</project>

